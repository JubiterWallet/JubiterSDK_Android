# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ '2.3' ]
    tags:
    - '*.*.*' # Push events to matching *.*.*, i.e. 1.0, 20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v1

    - name: submodule
      run: git submodule update --init --recursive
              
    - name: permission
      run: |
        sudo chmod 777 ./gradlew
        sudo chmod 777 ./ActionBuild.sh
        
    - name: Setup NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r21e
        add-to-path: false
        
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.10.2'
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Build aar
      run: |
            ./gradlew :sdk:assembleDebug
            ./gradlew :sdk:assembleRelease


    # 上传 app 文件
    - name: Upload AAR
      uses: softprops/action-gh-release@v1
      with:
        files: ./sdk/build/outputs/aar/*.aar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Upload AAR
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./sdk/build/outputs/aar/*.aar 
#         asset_content_type: application/vnd.android.package-archive
        
    - name: Build apk
      run: |
            ./gradlew assembleDebug
            ./gradlew assembleRelease

    # 上传 app 文件
    - name: Upload APK
      uses: softprops/action-gh-release@v1
      with:
        files: ./app/build/outputs/apk/release/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Upload APK
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./app/build/outputs/apk/release/*.apk 
#         asset_content_type: application/vnd.android.package-archive
